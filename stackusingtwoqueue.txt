package com.LinkedList;
import java.util.LinkedList;
import java.util.Queue;
public class StackUsingTWoQueues {
private Queue<Integer> queue1 =new LinkedList<Integer>();
private Queue<Integer> queue2 = new LinkedList<Integer>();
private int size=0;
public void push(int value) {
	queue2.add(value);
	size++;
	while(!queue1.isEmpty()) {
		queue2.add(queue1.remove());
	}
	Queue<Integer>ex=queue1;
	queue1=queue2;
	queue2=ex;
}
public int pop() throws Exception{
	if(queue1.isEmpty()) {
		throw new Exception("Stack is Empty");
	}
	size--;
	return queue1.remove();
}
public static void main(String[] args) throws Exception{
	StackUsingTWoQueues que=new StackUsingTWoQueues();
	que.push(100);
	que.push(200);
	que.push(300);
	que.push(400);
	que.push(500);
	System.out.println(que.pop());
	System.out.println(que.pop());
	System.out.println(que.pop());
}
}