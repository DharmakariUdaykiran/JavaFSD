package com.LinkedList;
	import java.util.ArrayDeque;
	import java.util.Queue;
	import java.util.Stack;
	public class queues {
		public static void reverse(Queue<Integer> queue) {
			int k=3;
			Stack<Integer> stack = new Stack<Integer>();
			while(!queue.isEmpty()) {
				stack.push(queue.remove()); 
			}
			while(!stack.isEmpty())
				queue.add(stack.pop());
			   for (int i = 0; i < queue.size() - k; i++) { 
				   queue.add(queue.peek());
				   queue.remove(); 
		        } 
		}
		
		public static void main(String[] args) {
			
			Queue<Integer> queue = new ArrayDeque<Integer>();
			queue.add(10);
			queue.add(20);
			queue.add(30);
			queue.add(40);
			queue.add(50);
			System.out.println(queue);
			reverse(queue);
			System.out.println(queue);
		}

	}